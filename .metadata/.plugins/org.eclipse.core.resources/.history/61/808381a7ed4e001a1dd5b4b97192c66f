package cn.abl.service.impl;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;

import cn.abl.dao.CCustomerInformationMapper;
import cn.abl.dao.CCustomerInformationMapperCustom;
import cn.abl.pojo.CCustomerInformation;
import cn.abl.service.CustomerService;
import cn.abl.utils.E3Result;
import cn.abl.utils.PageBean;

@Service
public class CustomerServiceImpl implements CustomerService {

	@Autowired
	private CCustomerInformationMapperCustom cCustomerInformationMapperCustom;
	@Autowired
	private CCustomerInformationMapper cCustomerInformationMapper;
	
	@Override
	public PageBean getAllCustomer(int page, int limit, CCustomerInformation cCustomerInformation, String userID) {
		PageHelper.startPage(page, limit);
		cCustomerInformation.setCreateId(userID);
		List<CCustomerInformation> allCustomerList = cCustomerInformationMapperCustom.getAllCustomer(cCustomerInformation);
		PageInfo<CCustomerInformation> pageInfo = new PageInfo<>(allCustomerList);
		List<CCustomerInformation> list = pageInfo.getList();
		long total = pageInfo.getTotal();
		PageBean pageBean = new PageBean();
		pageBean.setList(list);
		pageBean.setTotal(total);
		return pageBean;
	}

	@Override
	public CCustomerInformation getCustomerByID(String id) {
		CCustomerInformation customerInformation = cCustomerInformationMapper.selectByPrimaryKey(Integer.valueOf(id));
		return customerInformation;
	}

	@Override
	public E3Result updateCustomer(CCustomerInformation cCustomerInformation, String userID) {
		if (cCustomerInformation.getId() != null) { //修改
			cCustomerInformation.setCreateId(userID);
			cCustomerInformation.setCreateTime(new Date());
			int i = cCustomerInformationMapper.updateByPrimaryKeySelective(cCustomerInformation);
			if (0 == i) {
				return E3Result.build(400, "修改失败!");
			}
		} else {
			cCustomerInformation.setCreateId(userID);
			cCustomerInformation.setCreateTime(new Date());
			int i = cCustomerInformationMapper.insertSelective(cCustomerInformation);
			if (0 == i) {
				return E3Result.build(400, "新增失败!");
			}
		}
		return E3Result.ok();
	}

	@Override
	public E3Result delete(String ids) {
		int i = cCustomerInformationMapperCustom.delete(ids);
		if (0 == i) {
			return E3Result.build(400, "删除失败!");
		}
		return E3Result.ok();
	}

}
