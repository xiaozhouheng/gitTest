<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.abl.dao.FFinanceMapper" >
  <resultMap id="BaseResultMap" type="cn.abl.pojo.FFinance" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="order_type" property="orderType" jdbcType="INTEGER" />
    <result column="inspection_fee" property="inspectionFee" jdbcType="VARCHAR" />
    <result column="storage_fee" property="storageFee" jdbcType="VARCHAR" />
    <result column="customs_fee" property="customsFee" jdbcType="VARCHAR" />
    <result column="commodity_inspection_fee" property="commodityInspectionFee" jdbcType="VARCHAR" />
    <result column="transit_fee" property="transitFee" jdbcType="VARCHAR" />
    <result column="other1_fee" property="other1Fee" jdbcType="VARCHAR" />
    <result column="other2_fee" property="other2Fee" jdbcType="VARCHAR" />
    <result column="calculation_formula" property="calculationFormula" jdbcType="VARCHAR" />
    <result column="total_amount" property="totalAmount" jdbcType="VARCHAR" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="revenue_and_expenditure" property="revenueAndExpenditure" jdbcType="INTEGER" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, company_name, company_id, user_id, create_time, order_no, order_type, inspection_fee, 
    storage_fee, customs_fee, commodity_inspection_fee, transit_fee, other1_fee, other2_fee, 
    calculation_formula, total_amount, note, revenue_and_expenditure, create_user_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.abl.pojo.FFinanceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from f_finance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from f_finance
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from f_finance
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.abl.pojo.FFinanceExample" >
    delete from f_finance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.abl.pojo.FFinance" >
    insert into f_finance (id, company_name, company_id, 
      user_id, create_time, order_no, 
      order_type, inspection_fee, storage_fee, 
      customs_fee, commodity_inspection_fee, transit_fee, 
      other1_fee, other2_fee, calculation_formula, 
      total_amount, note, revenue_and_expenditure, 
      create_user_id)
    values (#{id,jdbcType=INTEGER}, #{companyName,jdbcType=VARCHAR}, #{companyId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{orderNo,jdbcType=VARCHAR}, 
      #{orderType,jdbcType=INTEGER}, #{inspectionFee,jdbcType=VARCHAR}, #{storageFee,jdbcType=VARCHAR}, 
      #{customsFee,jdbcType=VARCHAR}, #{commodityInspectionFee,jdbcType=VARCHAR}, #{transitFee,jdbcType=VARCHAR}, 
      #{other1Fee,jdbcType=VARCHAR}, #{other2Fee,jdbcType=VARCHAR}, #{calculationFormula,jdbcType=VARCHAR}, 
      #{totalAmount,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, #{revenueAndExpenditure,jdbcType=INTEGER}, 
      #{createUserId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.abl.pojo.FFinance" >
    insert into f_finance
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companyName != null" >
        company_name,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="orderType != null" >
        order_type,
      </if>
      <if test="inspectionFee != null" >
        inspection_fee,
      </if>
      <if test="storageFee != null" >
        storage_fee,
      </if>
      <if test="customsFee != null" >
        customs_fee,
      </if>
      <if test="commodityInspectionFee != null" >
        commodity_inspection_fee,
      </if>
      <if test="transitFee != null" >
        transit_fee,
      </if>
      <if test="other1Fee != null" >
        other1_fee,
      </if>
      <if test="other2Fee != null" >
        other2_fee,
      </if>
      <if test="calculationFormula != null" >
        calculation_formula,
      </if>
      <if test="totalAmount != null" >
        total_amount,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="revenueAndExpenditure != null" >
        revenue_and_expenditure,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="companyName != null" >
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="inspectionFee != null" >
        #{inspectionFee,jdbcType=VARCHAR},
      </if>
      <if test="storageFee != null" >
        #{storageFee,jdbcType=VARCHAR},
      </if>
      <if test="customsFee != null" >
        #{customsFee,jdbcType=VARCHAR},
      </if>
      <if test="commodityInspectionFee != null" >
        #{commodityInspectionFee,jdbcType=VARCHAR},
      </if>
      <if test="transitFee != null" >
        #{transitFee,jdbcType=VARCHAR},
      </if>
      <if test="other1Fee != null" >
        #{other1Fee,jdbcType=VARCHAR},
      </if>
      <if test="other2Fee != null" >
        #{other2Fee,jdbcType=VARCHAR},
      </if>
      <if test="calculationFormula != null" >
        #{calculationFormula,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null" >
        #{totalAmount,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="revenueAndExpenditure != null" >
        #{revenueAndExpenditure,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.abl.pojo.FFinanceExample" resultType="java.lang.Integer" >
    select count(*) from f_finance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update f_finance
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.companyName != null" >
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null" >
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderNo != null" >
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orderType != null" >
        order_type = #{record.orderType,jdbcType=INTEGER},
      </if>
      <if test="record.inspectionFee != null" >
        inspection_fee = #{record.inspectionFee,jdbcType=VARCHAR},
      </if>
      <if test="record.storageFee != null" >
        storage_fee = #{record.storageFee,jdbcType=VARCHAR},
      </if>
      <if test="record.customsFee != null" >
        customs_fee = #{record.customsFee,jdbcType=VARCHAR},
      </if>
      <if test="record.commodityInspectionFee != null" >
        commodity_inspection_fee = #{record.commodityInspectionFee,jdbcType=VARCHAR},
      </if>
      <if test="record.transitFee != null" >
        transit_fee = #{record.transitFee,jdbcType=VARCHAR},
      </if>
      <if test="record.other1Fee != null" >
        other1_fee = #{record.other1Fee,jdbcType=VARCHAR},
      </if>
      <if test="record.other2Fee != null" >
        other2_fee = #{record.other2Fee,jdbcType=VARCHAR},
      </if>
      <if test="record.calculationFormula != null" >
        calculation_formula = #{record.calculationFormula,jdbcType=VARCHAR},
      </if>
      <if test="record.totalAmount != null" >
        total_amount = #{record.totalAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.revenueAndExpenditure != null" >
        revenue_and_expenditure = #{record.revenueAndExpenditure,jdbcType=INTEGER},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update f_finance
    set id = #{record.id,jdbcType=INTEGER},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      order_type = #{record.orderType,jdbcType=INTEGER},
      inspection_fee = #{record.inspectionFee,jdbcType=VARCHAR},
      storage_fee = #{record.storageFee,jdbcType=VARCHAR},
      customs_fee = #{record.customsFee,jdbcType=VARCHAR},
      commodity_inspection_fee = #{record.commodityInspectionFee,jdbcType=VARCHAR},
      transit_fee = #{record.transitFee,jdbcType=VARCHAR},
      other1_fee = #{record.other1Fee,jdbcType=VARCHAR},
      other2_fee = #{record.other2Fee,jdbcType=VARCHAR},
      calculation_formula = #{record.calculationFormula,jdbcType=VARCHAR},
      total_amount = #{record.totalAmount,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      revenue_and_expenditure = #{record.revenueAndExpenditure,jdbcType=INTEGER},
      create_user_id = #{record.createUserId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.abl.pojo.FFinance" >
    update f_finance
    <set >
      <if test="companyName != null" >
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        order_type = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="inspectionFee != null" >
        inspection_fee = #{inspectionFee,jdbcType=VARCHAR},
      </if>
      <if test="storageFee != null" >
        storage_fee = #{storageFee,jdbcType=VARCHAR},
      </if>
      <if test="customsFee != null" >
        customs_fee = #{customsFee,jdbcType=VARCHAR},
      </if>
      <if test="commodityInspectionFee != null" >
        commodity_inspection_fee = #{commodityInspectionFee,jdbcType=VARCHAR},
      </if>
      <if test="transitFee != null" >
        transit_fee = #{transitFee,jdbcType=VARCHAR},
      </if>
      <if test="other1Fee != null" >
        other1_fee = #{other1Fee,jdbcType=VARCHAR},
      </if>
      <if test="other2Fee != null" >
        other2_fee = #{other2Fee,jdbcType=VARCHAR},
      </if>
      <if test="calculationFormula != null" >
        calculation_formula = #{calculationFormula,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null" >
        total_amount = #{totalAmount,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="revenueAndExpenditure != null" >
        revenue_and_expenditure = #{revenueAndExpenditure,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.abl.pojo.FFinance" >
    update f_finance
    set company_name = #{companyName,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      order_no = #{orderNo,jdbcType=VARCHAR},
      order_type = #{orderType,jdbcType=INTEGER},
      inspection_fee = #{inspectionFee,jdbcType=VARCHAR},
      storage_fee = #{storageFee,jdbcType=VARCHAR},
      customs_fee = #{customsFee,jdbcType=VARCHAR},
      commodity_inspection_fee = #{commodityInspectionFee,jdbcType=VARCHAR},
      transit_fee = #{transitFee,jdbcType=VARCHAR},
      other1_fee = #{other1Fee,jdbcType=VARCHAR},
      other2_fee = #{other2Fee,jdbcType=VARCHAR},
      calculation_formula = #{calculationFormula,jdbcType=VARCHAR},
      total_amount = #{totalAmount,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      revenue_and_expenditure = #{revenueAndExpenditure,jdbcType=INTEGER},
      create_user_id = #{createUserId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>